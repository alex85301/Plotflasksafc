import pandas as pd
import dash
import dash_core_components as dcc
import dash_html_components as html
import plotly.graph_objs as go
import numpy as np

dash_app = dash.Dash()

df = pd.read_csv('/Users/alexbaverstock/DashflaskSAFC/data/safc1920.csv')               
PlayerRatings = df[['rating','player_name']]
PlayerRatings.fillna('0', inplace=True)
PlayerRatings['rating'] = df['rating'].astype(float)
PlayerRatings['player_name'] = df['player_name'].astype(str)
df  = pd.pivot_table(PlayerRatings,values='rating',index='player_name',aggfunc='mean')

dash_app.layout = html.Div([
    dcc.Graph(
        id='scatter3',
        figure={
            'data': [
                go.Scatter(
                    x = df.index,
                    y = df['rating'],
                    mode = 'markers',
                    marker = {
                        'size': 12,
                        'symbol': 'pentagon',
                        'line': {'width': 2}
                        }
                )
            ],
            'layout': go.Layout(
                title = 'Player Ratings SAFC',
                xaxis = {'title': 'Player Names'},
                yaxis = {'title': 'Average Rating'},
                hovermode='closest'
            )
        }
    )
])
    # Custom HTML layout
    #dash_app.index_string = html_layout

#     # Create Layout
# dash_app.layout = html.Div(
#     children=[dcc.Graph(
#         id='scatter3',
#         figure={
#             'data': [{
#                 'x': df.index,
#                 'y': df['rating'],
#                 mode = 'markers',
#                 marker = {
#                     'size': 12,
#                     'symbol': 'pentagon',
#                     'line': {'width': 2}
#                     }
#                 }],
#                 'layout': {
#                     'title': 'Player Ratings.',
#                     'height': 500,
#                     'padding': 150
#                 }
#             }),
#         ],
#         id='dash-container'
#     )
if __name__ == '__main__':
    dash_app.run_server()
